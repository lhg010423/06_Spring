* framework랑 library 차이점
framework 없으면 개발을 못함
library 없어도 불편하지만 개발 가능

Spring Legacy(MVC) / Boot
표준                    /이것도 표준으로 인정
수동                    /자동
세팅하는게 힘듬      /세팅 쉬움
jdk11버전까지만지원/

영속성 : 데이터를 영구적으로 저장하는거

DBCP(Data Base Connection Pool) : Connection을 알아서 만들어주고 반납해줌

**************** 설치 *****************

https://spring.io/tools
에서 윈도우 버전설치
기존에 있던 lombok.jar를 다운받고 압축풀었던 파일중에 sts-4.22.0.RELEASE 파일 안에 복붙한다
sts-4.22.0.RELEASE 파일 안에서 shift + 우클릭으로 powershell 을 실행하고
java jar .\lombok.jar + 엔터를 하면 화면이 나옴, 왼쪽에 버튼을 누루고 sts-4.22.0.RELEASE 파일안에
SpringTollSuite4 실행파일 선택후 확인


프로젝트 만들기*****************************
Create new Spring Starter Project 클릭
type : Gradle - Groovy
Packagin : jar
Java Version : 17
Janguage : Java
Group : edu.kh
Package : edu.kh.demo
Next
Spring Boot DevTools
Lombok
Spring Configuration Processor
Thymeleaf
Spring Web

Templates
forward나 redirect같은 응답페이지는 src/main/resources/templates 가 기준이다

static == webapp

application..properties 는 프로젝트에 전반적인 설정을 적용시키는 거다

ctrl + s 저장 할때 가운데 UTF-8을 못눌렀으면 application.properties 우클릭
Properties - Resources - Text file encoding - Other 여기에서 UTF-8 을 설정하고 확인

HTTP 의 기본 포트가 80 이다


*********************************

Spring에서는 xml을 사용할 환경이 없음
MarketPlace에서 플러그인을 해야한다

Help - Eclipse Marketplace - xml 검색 - Eclipse XML Editors and Tools 3.33 Install - confrim
- 동의 하고 finish - Trust Artifacts 가뜨면 PGP 체크하고 확인한다


Mybatis를 이용하기 위해 XML 파일 DTD 추가하는 법***********************
Window - Preferences - xml검색 - XML Catalog - User Specified Entries 클릭 후 Add

Config
Location : http://mybatis.org/dtd/mybatis-3-config.dtd
Key type : Public ID
Key : -//mybatis.org//DTD Config 3.0//EN

Mapper
Location : http://mybatis.org/dtd/mybatis-3-mapper.dtd
Key type : Public ID
Key : -//mybatis.org//DTD Mapper 3.0//EN

이 두가지 추가하고
Apply and Close 클릭

mybatis-config.xml 생성
src/main/resources’폴더에 mybatis-config.xml 파일 생성


*********************************************************************

mybatis-config.xml 에서 오류날 때******************************************
Window - Preferences - XML (Wild WebDeveloper) 클릭
- Downlod external resources like referenced DTD, XSD 체크후 Apply



MyBatis 설정하는 법******************************************************

http://www.mybatis.org/mybatis-3/ko







이론*****************************
mybatis는 jdbc프레임워크이다
CRUD(Create, Read, Update, Delete) 를 쉽게 만들기위해 쓰는게 MyBatis이다
https://mybatis.org/mybatis-3/ko/getting-started.html

SqlSession = Connection + MyBatis
Factory Bean = 스프링이 관리하는 공장

** Connection Pool **
Connection : DB 연결 정보를 담고 있는 객체(이게 있어야 JDBC 수행 가능)
Pool : 웅덩이, 수영장... 모여있는 곳
Connection Pool : Connection이 모여있는 곳

기존에 했던 방법
servlet -> service(getConnection == 커넥션생성) -> dao
		<--- close(conn)
비효율적이다
이걸 효율적으로 해주는게 Connection Pool이다
-> Server 실행 시 DB와 연결된 Connection을 일정 개수 생성
-> 클라이언트 요청 시 만들어진 Connection 대여
-> 요청이 처리 완료되면 다시 Connection 반납 받음
* 생성/소멸(반환) 걸리는 시간이 현격히 감소
* 대기열 + DB 연결 과부화 예방


** config.properties **
DB연결 정보를 가지고있는 파일은 github에 올리면 보안상 문제가 있다
config.properties 만들기
src/main/resources 에서 새로만들기 file 을 선택한후 config.properties 라는 이름으로 만든다
UTF-8 설정이 안돼있어서 한글이 깨지니 config.properties 우클릭후 Properties 클릭
Other -> UTF-8 선택후 Apply
그리고 아래 내용 복붙
@@@@@@@@@@@@@@@@@@@@@@
#오라클 DB 연결 정보
spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@IP주소:포트번호:DB이름
spring.datasource.hikari.username=계정명
spring.datasource.hikari.password=비밀번호
# HikariCP Connection Pool Properties
#풀이 연결을 사용할 수 있을 때까지 대기하는 최대 시간(ms)을 지정
spring.datasource.hikari.connection-timeout=30000
#풀의 최대 연결 수 설정
spring.datasource.hikari.maximum-pool-size=20
#연결이 풀에서 유휴 상태로 있을 수 있는 최대 시간(ms)을 지정
spring.datasource.hikari.idle-timeout=600000
#연결 풀의 이름을 지정
spring.datasource.hikari.pool-name=MyHikariCP
#자동 커밋 끄기
spring.datasource.hikari.auto-commit=false

위 복붙한 내용에서 db연결정보 수정후 저장



.gitignore에 설정된 파일 github에서 지우기*******************************
git rm -r --cached .
git add .
git commit -m "240403"
git push



gitignore.io

시험  **********************************************************************
서블릿 끝까지
오청 보내고 파리미터값 받고 컨트롤러에서 가공하고 forward하고 forward한 곳에서 처리하는데 에러남
스프링 데모프로젝트 1번만 알면 다품








동기식 요청
뭐 할때마다 페이지 하얗게 되면서 새로고침됨
A 요청을 수행 중일때 B가 요청들어오면
A가 끝난뒤에 B가 시작할 수 있다
한번에 하나만 가능

비동기식 요청
A 요청을 수행 중일때 B가 요청들어오면
A 가 안끝났어도 A, B가 동시에 수행중이다
동시에 여러개 가능

Ajax 버전(비동기식)


쿠키 : 브라우저(클라이언트)에 저장되는 작은 데이터 조각, 보안에 취약, 보통 30일정도 저장됨

세션 (Session) : 서버측에서 사용자 상태 관리
클라이언트가 서버에 처음 접속하면 서버는 해당 클라이언트에 대한 고유 sessoinId를 발급하고 저장한다(세션ID를 서버도 가지고있고 클라이언트에게 보내줌)
서버 하나당 여러 세션Id를 가지고 있을 수 있음(여러명의 유저가 있을 수 있으니까)
그 이후에 해당 클라잉너트가 요청할때마다 sessionID가 서버에 전송되서 해당 세션id에 관한 정보를 처리한다
보안상 쿠키보다 안점한, 서버에서 데이터를 관리하고있음 클라이언트에서 데이터관리를 못함


04/11 10:06 SessionStates 설명 듣기
04/11 10:18 쿠키설명 듣기
04/17 9시 BoardProject 전체설명

f12 -> Application -> Cookies -> 주소 확인 -> saveId가 있음