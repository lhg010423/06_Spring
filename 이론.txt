@RedirectAttributes
리다이렉트 시 값을 1회성으로 전달하는 객체
RedirectAttributes.addFlashAttribute("key", value) 형식으로 잠깐 세션에 속성을 추가
응답 전 : request scope
redirect 중 : session scope로 이동
응답 후 : request scope 복귀

@Service
Service interface가 아닌 serviceImpl Class에 사용한다
비즈니스 로직(데이터를 가공, 트랜잭션 처리) 역할 명시 + Bean 등록


@Transactional
ServiceImpl에 사용함
트랜잭션 처리를 수행하라고 지시하는 어노테이션
( == 선언적 트랙잭션 처리)
정상 코드 수행 시 COMMIT
기본값 : Service 내부 코드 수행 중 RuntimeException 발생 시 rollback
rollbackFor 속성 : 어떤 예외가 발생했을 때 rollback 할 지 지정
예)
@Transactional(rollbackFor = Exception.class) => 범위 예외 전체

@ResponseBody
- 컨트롤러 메서드의 반환값을
  HTTP 응답 본문에 직접 바인딩하는 역할임을 명시
- 컨트롤러 메서드의 반환값을
  비동기 요청했던 HTML/JS 파일 부분에
  값을 돌려보낼것이다 명시
- forward/redirect 로 인식 X
- 비동기를 받아주는 메서드










private TodoMapper mapper;

public Map<String, Object> selectAll() {
	
	List<Todo> todoList = mapper.selectAll();


Config----------------------------------------------------------------------------


<settings>
	<!-- Java -> DB로 INSERT,UPDATE 시 Java의 null 값을 DB의 NULL로 인식하도록 설정-->
	<setting name="jdbcTypeForNull" value="NULL" />
	<!-- DB의 UnderScore (_) 표기법 <-> Java의 Camel 표기법
	두 표기법이 서로 변환 될 수 있도록 매핑하여
	Java 필드명(memberId)과 DB 컬럼명(MEMBER_ID)가 서로 연결되게 함
	Mybatis의 기능이다
	-->
	<!-- 
		java에서 null : 참조하는 값이 없다
		DB에서 null : 값이 없다
	 -->	
	<setting name="mapUnderscoreToCamelCase" value="true" />
</settings>





서버에 이미지같은 파일이 올라갈때 파일이름 그대로 올라가는것이 아닌
생성날짜_난수 등으로 Rename해서 올라간다(서버관리자가 관리하기 쉽게 하기 위해서)





클라이언트가 요청하고 요청받을 때 (Client <-> Dispatcher Servlet) 필터(Filter)가 사용됨



Interceptor : 가로채는거 + 넣어주는거, Spring에서 제공하는 기능
Dispatcher Servlet <-> Handler
		ㄴ Controller
		ㄴ View Resolver








